name: Build APK and IPA

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install kivy
        pip install buildozer

    - name: Build APK
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
            python3-pip \
            build-essential \
            git \
            python3 \
            python3-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            build-essential \
            libsqlite3-dev \
            sqlite3 \
            bzip2 \
            libbz2-dev \
            zlib1g-dev \
            libssl-dev \
            openssl \
            libgdbm-dev \
            libgdbm-compat-dev \
            liblzma-dev \
            libreadline-dev \
            libncursesw5-dev \
            libffi-dev \
            uuid-dev \
            openjdk-8-jdk \
            unzip \
            autoconf \
            automake \
            libtool \
            libpq-dev \
            wget
        pip install --upgrade Cython==0.29.21
        # Create a basic buildozer.spec if it doesn't exist
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        # Build the APK
        buildozer -v android debug

    - name: Build IPA
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install python3
        pip3 install --upgrade pip
        pip3 install kivy
        pip3 install briefcase
        briefcase create iOS
        briefcase build iOS
        briefcase package iOS

    - name: Upload APK artifact
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: app-debug
        path: bin/*.apk

    - name: Upload IPA artifact
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v2
      with:
        name: app-release
        path: iOS/build/*.ipa
